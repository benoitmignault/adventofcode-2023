#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import string


# Fonction pour remplir la grille 2D avec un fichier
def remplir_grille(fichier):
    # Initialisation d'un tableau 2D pour recevoir des chiffres, avec des signes de ponctuation
    grille = []
    
    while True:    
        # On lit une ligne du fichier en retirant le retour à la ligne
        une_ligne = fichier.readline().strip()
        
        # On valide que la ligne existe et non vide
        if une_ligne:            
            # On ajout la ligne avec chaque caractère dans le tableau 2D, initialiser plus haut
            grille.append(list(une_ligne))
        else:
            # On ferme le fichier et on sort de la boucle
            fichier.close()
            break
    
    return grille


# Fonction pour valider si la game est valide en fonction de chaque sous game
def valider_game(sous_game):    
    # Variable de controle pour savoir si la game est valide
    game_valide = True
    
    # On boucle sur chaque sous configuration
    for configuration in sous_game:
        # On extrait le chiffre et la couleur
        chiffre = int(configuration.split(" ")[1])
        
        # Extraire la couleur et la mettre en majuscule et enlever les espaces
        couleur = configuration.split(" ")[2].upper().strip()
        
        # On valide que la valeur n'est pas plus grande que la valeur maximale pour chaque type de couleur
        if (chiffre > RED and couleur == "RED") or (chiffre > GREEN and couleur == "GREEN") or (chiffre > BLUE and couleur == "BLUE"):                    
            game_valide = False
            break
    
    return game_valide







def main():
    
    # Ouverture du fichier
    fichier = open("petit-fichier")

    # On rempli la grille 2D avec le fichier
    grille = remplir_grille(fichier)

    # Afficher le tableau 2D
    #for ligne in grille:
    #    print(ligne)
    
    # Besoin d'aller chercher un point précis dans le tableau
    #print(grille[0][0])
    
    # Besoin de connaitre le nombre de colonne et de ligne du tableau
    nb_colonne = len(grille[0])
    nb_ligne = len(grille)
    #print(nb_colonne, nb_ligne)
    #print(grille[nb_ligne-1][nb_colonne-1])    
    
    # On doit itérer la grille pour trouver les signes de ponctuations et faire des actions rendu là
    for x in range(nb_ligne):
        # On doit itérer sur les colonnes
        for y in range(nb_colonne):
            # On doit valider si c'est un signe de ponctuation
            if grille[x][y] in string.punctuation and grille[x][y] != ".":
                print("Signe de ponctuation trouvé: ", grille[x][y])           
                # Vérifier si les indices sont dans les limites du tableau
                # On vérifi qu'on peut aller à droit et en bas
                if y + 1 < nb_colonne and x + 1 < nb_ligne:
                    # Valide un début de chiffre à droite              
                    if grille[x][y + 1].isdigit():
                        print("Game détecté")
                        
                    # Valide un début de chiffre en bas       
                    if grille[x + 1][y].isdigit():
                        print("Game détecté")
                    
                    # Valide un début de chiffre en bas à droite
                    if grille[x + 1][y + 1].isdigit():
                        print("Game détecté")
                
                # On vérifi qu'on peut aller à gauche et en haut
                if y - 1 >= 0 and x - 1 >= 0:
                    # Valide un début de chiffre à gauche              
                    if grille[x][y - 1].isdigit():
                        print("Game détecté")
                        
                    # Valide un début de chiffre en haut       
                    if grille[x - 1][y].isdigit():
                        print("Game détecté")
                    
                    # Valide un début de chiffre en haut à gauche
                    if grille[x - 1][y - 1].isdigit():
                        print("Game détecté")
                        
                # On vérifi qu'on peut aller à gauche et en bas
                if y - 1 >= 0 and x + 1 < nb_ligne:                    
                    # Valide un début de chiffre en bas à gauche
                    if grille[x + 1][y - 1].isdigit():
                        print("Game détecté")
                
                # On vérifi qu'on peut aller à droite et en haut
                if y + 1 < nb_colonne and x - 1 >= 0:                    
                    # Valide un début de chiffre en haut à droite
                    if grille[x - 1][y + 1].isdigit():
                        print("Game détecté")
                                
                          

    
    # Comment créer un patern avec tous les signes de ponctuations
    
    
    # Extraire le numéro de la game, qui devra être additionner si la game est valide
    #numero_game = une_ligne.split(":")[0].split(" ")[1]
    
    # Conversion des ; en ,
    #sous_game = une_ligne.replace(";", ",").split(":")[1].split(",")            
    
    # Variable de controle pour savoir si la game est valide
    #game_valide = valider_game(sous_game)
    
    # On valide que la game est valide
    #if game_valide:
        # On incrémente la somme total
    #    somme_total += int(numero_game)


    # On affiche la somme total
    #print("La somme total est de: ", somme_total)

# Appel de la fonction main
if __name__ == "__main__":
    main()
    
# Résultat:
'''
La somme total est de:  2105

real    0m0,059s
user    0m0,054s
sys     0m0,005s
'''